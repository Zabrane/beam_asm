%% This solution is halfway between _asmcheat and plain old _asm:
%%
%% - It still does jump ops instead of call_only ops.
%% - However, it jumps to the entry point on recursion.
%%
%% Therefore the difference between the speed of _asmcheat_unopt and
%% _asmcheat is the cost of the additional tests, and the difference
%% between the speed of _asmcheat_unopt and _asm is the overhead of a
%% calls over jumps.
-exports([run/2]).

%% args: A B
run/2 ->
  @top
  ?is_lt @ordered x0 x1
  move x1 x2
  move x0 x1
  move x2 x0

  @ordered
  ?is_ge @@ x0 0
  ?is_ge @@ x1 0

  @regular
  ?is_eq_exact @divide x1 0
  return

  @divide
  gc_bif rem @0 2 [x0, x1] x2
  move x1 x0
  move x2 x1
  jump @top
.
